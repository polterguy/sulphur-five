
/*
 * Creates the main display for Sulphur Five.
 */





/*
 * Storing the app's "root" URL for later references, to allow us to create relative
 * URLs and hyperlinks.
 */
_app-root-url
p5.io.unroll-path:@SULPHUR/
split:x:/-?value
  =:/
set:x:/@_app-root-url?value
  src:/{0}/
    :x:/@split/0/-?name





/*
 * Checking settings to figure out who can upload files.
 *
 * This is necessary in order to be able to enable/disable uploading of files,
 * according to restrictions in settings of the app.
 */
select-data:x:/*/*/sulphur.settings
whoami
if:x:/@whoami/*/role?value
  =:root
  or:x:/@select-data/*/*/uploaders?value
    =:all
  or:x:/@whoami/*/default?value
    not
    and:x:/@select-data/*/*/uploaders?value
      =:usersl

  /*
   * Creating dropzone for entire page, to allow for drag and drop uploading of files.
   */
  eval-x:x:/+/*
  micro.page.create-dropzone
    url:{0}upload
      :x:/@_app-root-url?value
    .onfinish:@"function(uid, no_files, no_errors) {{window.location.replace('{0}batch/' + uid);}}"
      :x:/@_app-root-url?value
    .onbegin:@"function() {p5.$('sulphur-upload-obscurer').el.style.display = 'block';}"

else

  /*
   * User is not allowed to upload files, hence we remove all traces of logic
   * used for enabling uploading of files.
   *
   * This includes removing the uploader "obscurer", in addition to the actual
   * file input element, which encapsulates uploading of files, in addition to
   * the button that triggers our "browse for file" dialogue.
   */
  set:x:/../*/create-widget/**(/button/=sulphur-upload-widget|/micro.widgets.obscurer)





/*
 * Verifying user is "root", and if not, we remove the settings button.
 */
if:x:/@whoami/*/role?value
  !=:root

  /*
   * User is not root, hence we entirely remove the button that allows editing
   * of app's settings and configuration.
   */
  set:x:/../*/create-widget/**/button/=sulphur-settings-button





/*
 * Creating main display.
 */
eval-x:x:/+/**/_app-root-url
create-widget
  parent:sulphur-main-container
  class:row
  widgets

    /*
     * Obscurer show when files are uploaded.
     */
    micro.widgets.obscurer:sulphur-upload-obscurer
      style:"display:none;"
      message:"Please wait while we upload your files ..."

    /*
     * Wraps our search textbox and button.
     */
    div
      class:col-70
      widgets
        div
          class:fill strip
          widgets

            /*
             * Search textbox.
             */
            input:sulphur-search
              placeholder:Search ...
              type:text
              onkeydown:@"if (event.keyCode == 13) {p5.$('sulphur-search-button').raise('onclick');return false;}"

            /*
             * Search button.
             */
            button:sulphur-search-button
              innerValue:@"<span class=""icon-search""></span>"
              title:Search
              onclick

                /*
                 * Performing search.
                 */
                get-widget-property:sulphur-search
                  value
                eval-x:x:/+/*
                micro.evaluate.file:@SULPHUR/main/databind-files.hl
                  filter:x:/@get-widget-property/*/*?value

                /*
                 * Setting focus to search textbox again.
                 */
                micro.page.set-focus:sulphur-search

            /*
             * Clear search button.
             */
            button:sulphur-clear-button
              innerValue:@"<span class=""icon-remove""></span>"
              title:Clear all filter conditions
              onclick

                /*
                 * Redirecting to app's root URL.
                 */
                _app-root-url:x:/@_app-root-url?value
                p5.web.set-location:x:/-?value

    /*
     * Wrapper for settings button, upload button, home button, and file input
     * element, that encapsulates uploading of files from the client.
     */
    div
      class:col-30
      widgets
        div
          class:right
          widgets
            div
              class:strip
              style:"display:inline-block;"
              widgets

                /*
                 * Settings button.
                 */
                button:sulphur-settings-button
                  innerValue:@"<span class=""icon-cog""></span>"
                  title:Manage settings ...
                  onclick

                    /*
                     * Launching settings form.
                     */
                    micro.evaluate.file:@SULPHUR/configuration/settings.hl

                /*
                 * Upload file button.
                 */
                button:sulphur-upload-widget
                  style:"padding-left:35px;padding-right:35px;"
                  innerValue:@"<span class=""icon-upload""></span>"
                  title:Upload file ...
                  onclick:@"p5.dropzone.browse();event.stopPropagation(true);return false;"

                /*
                 * Delete entire batch button.
                 */
                button:sulphur-delete-batch-widget
                  innerValue:@"<span class=""icon-trash""></span>"
                  title:Delete entire batch
                  oninit

                    /*
                     * Verifying that user is viewing an entire batch, and that he
                     * is root, and if not, we delete this entire widget.
                     */
                    whoami
                    p5.web.get-location-url
                    split:x:/-?value
                      =:/
                    if:x:/@split/0/-2?name
                      !=:batch
                      or:x:/@whoami/*/role?value
                        !=:root

                      /*
                       * Either user is not root, or the current URL is not for
                       * a specific batch.
                       *
                       * Regardless, we entirely delete the widget.
                       */
                      delete-widget:x:/../*/_event?value

                  onclick

                    /*
                     * Asking user to confirm action.
                     */
                    create-widgets
                      micro.widgets.modal:sulphur-confirm-batch-deletion
                        widgets
                          h3
                            innerValue:Please confirm action
                          p
                            innerValue:This will delete the entire batch. Are you sure you want to do this? This action cannot be undone.
                          div
                            class:right
                            widgets
                              div
                                class:strip
                                style:"display:inline-block;"
                                widgets
                                  button
                                    innerValue:Yes
                                    oninit
                                      micro.page.set-focus:x:/../*/_event?value
                                    onclick

                                      /*
                                       * Forward evaluated above.
                                       */
                                      _app-root-url:x:/../*/_app-root-url?value

                                      /*
                                       * Figuring out ID of batch.
                                       */
                                      p5.web.get-location-url
                                      split:x:/-?value
                                        =:/

                                      /*
                                       * Opening database connection, and deleting entire batch,
                                       * making sure we physically delete all files in the process.
                                       */
                                      whoami
                                      p5.mysql.connect:[sulphur]

                                        /*
                                         * Making sure we create a transaction, to not allow for
                                         * "dangling files" in the system.
                                         */
                                        p5.mysql.transaction.begin

                                          /*
                                           * We need to select all files, such that we can find them
                                           * physically on disc, to delete them.
                                           */
                                          p5.mysql.select:@"select * from files where batchid = @batchid"
                                            @batchid:x:/@split/0/-?name

                                          /*
                                           * Deleting database entries for files, making sure we don't
                                           * delete any files that are private, and that does not belong 
                                           * to the current user, unless they belong to "guest".
                                           */
                                          p5.mysql.delete:@"delete from files where batchid = @batchid and (username = @username or username = 'guest' or type != 'private')"
                                            @batchid:x:/@split/0/-?name
                                            @username:x:/@whoami/*/username?value

                                          /*
                                           * Looping through each file, and deleting it physically from disc.
                                           */
                                          for-each:x:/@p5.mysql.select/*

                                            /*
                                             * Figuring out if this is a private file, not belonging to
                                             * the currently logged in user.
                                             */
                                            if:x:/@_dp/#/*/type?value
                                              =:private
                                              and:x:/@whoami/*/username?value
                                                !=:x:/@_dp/#/*/username?value
                                              and:x:/@whoami/*/username?value
                                                !=:guest

                                              /*
                                               * Current file in batch is privately owned by a user,
                                               * and it does not belong to "guest".
                                               */
                                              continue

                                            /*
                                             * Figuring out file's folder.
                                             */
                                            _folder
                                            if:x:/@_dp/#/*/username?value
                                              =:guest

                                              /*
                                               * Guest can only have private files.
                                               */
                                              set:x:/@_folder?value
                                                src:/common/documents/private/

                                            else

                                              /*
                                               * Figuring out file's folder according to protection,
                                               * and the user's username.
                                               */
                                              if:x:/@_dp/#/*/type?value
                                                =:public

                                                /*
                                                 * File is public.
                                                 */
                                                set:x:/@_folder?value
                                                  src:/common/documents/public/

                                              else-if:x:/@_dp/#/*/type?value
                                                =:protected

                                                /*
                                                 * File is protected.
                                                 */
                                                set:x:/@_folder?value
                                                  src:/common/documents/private/

                                              else-if:x:/@_dp/#/*/type?value
                                                =:private

                                                /*
                                                 * File is private, and it belongs to the currently
                                                 * logged in user.
                                                 */
                                                set:x:/@_folder?value
                                                  src:~/documents/private/

                                            /*
                                             * Physically deleting file on disc.
                                             */
                                            delete-file:{0}{1}{2}
                                              :x:/@_folder?value
                                              :x:/@_dp/#/*/prefix?value
                                              :x:/@_dp/#/*/filename?value

                                          /*
                                           * Files were successfully deleted from disc, hence we
                                           * can safely commit transaction.
                                           * Committing transaction.
                                           */
                                          p5.mysql.transaction.commit

                                      /*
                                       * Redirecting to app's root url.
                                       */
                                      p5.web.set-location:x:/@_app-root-url?value

                                  button
                                    innerValue:No
                                    onclick

                                      /*
                                       * Simply deleting modal confirmation widget.
                                       */
                                      delete-widget:sulphur-confirm-batch-deletion

                /*
                 * Home button, leads user to main desktop.
                 */
                button
                  innerValue:@"<span class=""icon-home""></span>"
                  title:Return to desktop
                  onclick

                    /*
                     * Redirecting to root location.
                     */
                    p5.web.get-root-location
                    p5.web.set-location:x:/-?value

    div
      class:col-80 offset-10 air-top
      widgets

        /*
         * Datagrid wrapping actual files in system.
         */
        container:sulphur-files-grid
          class:row
          oninit

            /*
             * Including JavaScript to determine is user is at the bottom of page,
             * at which point we "auto-feed" grid with more items.
             */
            p5.web.include-javascript:@"
window.onscroll = function() {
  if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
    if (!p5.sulphur_end_of_dataset) {
      var el = p5.$('sulphur-files-grid');
      el.raise('.onfeed');
    }
  }
};"
          .onfeed

            /*
             * Adding more files to datagrid.
             */
            p5.web.viewstate.get:sulphur.last-file-id
            eval-x:x:/+/*
            micro.evaluate.file:@SULPHUR/main/databind-files.hl
              more:x:/@p5.web.viewstate.get/*?value





/*
 * Initial databinding of files.
 */
micro.evaluate.file:@SULPHUR/main/databind-files.hl





/*
 * Checking to see if there is a "edit" argument, and if so, making sure we
 * display that file in a "modal edit container".
 */
p5.web.query.get:edit
if:x:/@p5.web.query.get/*?value

  /*
   * Evaluating file responsible for editing file.
   */
  eval-x:x:/+/*
  micro.evaluate.file:@SULPHUR/handle-files/edit-file.hl
    id:x:/@p5.web.query.get/*?value
