
/*
 * Creates the main display for Sulphur Five.
 */





/*
 * Storing the app's "root" URL for later references, to allow us to create relative
 * URLs and hyperlinks.
 */
_app-root-url
p5.io.unroll-path:@SULPHUR/
split:x:/-?value
  =:/
set:x:/@_app-root-url?value
  src:/{0}/
    :x:/@split/0/-?name





/*
 * Checking settings to figure out who can upload files.
 *
 * This is necessary in order to be able to enable/disable uploading of files,
 * according to restrictions in settings of the app.
 */
select-data:x:/*/*/sulphur.settings
whoami
if:x:/@whoami/*/role?value
  =:root
  or:x:/@select-data/*/*/uploaders?value
    =:all
  or:x:/@whoami/*/default?value
    not
    and:x:/@select-data/*/*/uploaders?value
      =:usersl

  /*
   * Creating dropzone for entire page, to allow for drag and drop uploading of files.
   */
  eval-x:x:/+/*
  micro.page.create-dropzone
    url:{0}upload
      :x:/@_app-root-url?value
    .onfinish:@"function(uid, no_files, no_errors) {{window.location.replace('{0}batch/' + uid);}}"
      :x:/@_app-root-url?value
    .onbegin:@"function() {p5.$('sulphur-upload-obscurer').el.style.display = 'block';}"

else

  /*
   * User is not allowed to upload files, hence we remove all traces of logic
   * used for enabling uploading of files.
   *
   * This includes removing the uploader "obscurer", in addition to the actual
   * file input element, which encapsulates uploading of files, in addition to
   * the button that triggers our "browse for file" dialogue.
   */
  set:x:/../*/create-widget/**(/button/=sulphur-upload-widget|/micro.widgets.obscurer)





/*
 * Verifying user is "root", and if not, we remove the settings button.
 */
if:x:/@whoami/*/role?value
  !=:root

  /*
   * User is not root, hence we entirely remove the button that allows editing
   * of app's settings and configuration.
   */
  set:x:/../*/create-widget/**/button/=sulphur-settings-button





/*
 * Creating main display.
 */
eval-x:x:/+/**/_app-root-url
create-widget
  parent:sulphur-main-container
  class:row
  widgets

    /*
     * Obscurer show when files are uploaded.
     */
    micro.widgets.obscurer:sulphur-upload-obscurer
      style:"display:none;"
      message:"Please wait while we upload your files ..."

    /*
     * Wraps our search textbox and button.
     */
    div
      class:col-60
      widgets
        div
          class:fill strip
          widgets

            /*
             * Search textbox.
             */
            input:sulphur-search
              placeholder:Search ...
              type:text
              onkeydown:@"if (event.keyCode == 13) {p5.$('sulphur-search-button').raise('onclick');return false;}"

            /*
             * Search button.
             */
            button:sulphur-search-button
              innerValue:@"<span class=""icon-search""></span>"
              title:Search
              onclick

                /*
                 * Performing search, by retrieving search textbox' value, and
                 * redirecting client to a URL containing a GET parameter with 
                 * search text as query string.
                 */
                _app-root-url:x:/@_app-root-url?value
                get-widget-property:sulphur-search
                  value

                /*
                 * Checking if search query was empty, at which point we redirect
                 * to main root URL of app.
                 */
                if:x:/@get-widget-property/*/*?value
                  =:

                  /*
                   * Query is empty, simply reloading app's root URL, and 
                   * returning early.
                   */
                  p5.web.set-location:x:/@_app-root-url?value
                  return

                p5.html.url-encode:x:/@get-widget-property/*/*?value
                p5.web.set-location:{0}?q={1}
                  :x:/@_app-root-url?value
                  :x:/@p5.html.url-encode?value

    /*
     * Wrapper for settings button, upload button, home button, and file input
     * element, that encapsulates uploading of files from the client.
     */
    div
      class:col
      widgets
        div
          class:right
          widgets
            div
              class:strip toolbar
              widgets

                /*
                 * Upload file button.
                 */
                button:sulphur-upload-widget
                  class:larger
                  innerValue:@"<span class=""icon-upload2""></span>"
                  title:Upload file ...
                  onclick:@"p5.dropzone.browse();event.stopPropagation(true);return false;"

                /*
                 * Settings button.
                 */
                button:sulphur-settings-button
                  innerValue:@"<span class=""icon-cog""></span>"
                  title:Manage settings ...
                  onclick

                    /*
                     * Launching settings form.
                     */
                    micro.evaluate.file:@SULPHUR/configuration/settings.hl

                /*
                 * Home button, leads user to main desktop.
                 */
                button
                  innerValue:@"<span class=""icon-home3""></span>"
                  title:Return to desktop
                  onclick

                    /*
                     * Redirecting to root location.
                     */
                    p5.web.get-root-location
                    p5.web.set-location:x:/-?value

    div
      class:col-100
      widgets

        /*
         * Datagrid wrapping actual files in system.
         */
        container:sulphur-files-grid
          class:row
          oninit

            /*
             * Including JavaScript to determine if user is at the bottom of page,
             * at which point we "auto-feed" grid with more items.
             */
            p5.web.include-javascript:@"
window.onscroll = function() {
  if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
    if (!p5.sulphur_end_of_dataset) {
      if(p5.sulphur_ongoing_scroll === true) {
        return;
      }
      p5.sulphur_ongoing_scroll = true;
      var el = p5.$('sulphur-files-grid');
      el.raise('.onfeed',{
        onsuccess:function() {
          p5.sulphur_ongoing_scroll = false;
        }
      });
    }
  }
};"
          .onfeed

            /*
             * Adding more files to datagrid.
             */
            p5.web.viewstate.get:sulphur.last-file-id

            /*
             * Checking if we have a query/search parameter first.
             */
            p5.web.query.get:q
            if:x:/@p5.web.query.get/*?value

              /*
               * Invocation contains a query/search HTTP GET parameter, first making sure
               * our databind invocation is given our query parameter.
               */
              eval-x:x:/+/*/*
              add:x:/../*/micro.evaluate.file
                src
                  filter:x:/@p5.web.query.get/*?value

            eval-x:x:/+/*
            micro.evaluate.file:@SULPHUR/main/databind-files.hl
              more:x:/@p5.web.viewstate.get/*?value





/*
 * Checking if we have a query/search parameter first.
 */
p5.web.query.get:q
if:x:/@p5.web.query.get/*?value

  /*
   * Invocation contains a query/search HTTP GET parameter, first making sure
   * our databind invocation is given our query parameter.
   */
  eval-x:x:/+/*/*
  add:x:/../*/micro.evaluate.file
    src
      filter:x:/@p5.web.query.get/*?value

  /*
   * Then making sure we display our query parameter in our search textbox, and
   * that we give our textbox initial focus.
   */
  set-widget-property:sulphur-search
    value:x:/@p5.web.query.get/*?value
  micro.page.set-focus:sulphur-search





/*
 * Databinding files.
 */
micro.evaluate.file:@SULPHUR/main/databind-files.hl
